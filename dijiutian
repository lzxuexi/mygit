//二维数组初始化时，行可以省略，，列不能省略
//int arr[][4] = {};
//二维数组的下标调用
/*
#include<stdio.h>
int main()
{
    int arr[3][4] = {{1,2,3},{4,5}};
    int i = 0;
    int j = 0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<4;j++)
        {
            printf("%d ",arr[i][j]);
        }
        printf("\n");
    }
    return 0;
}
*/

//冒泡算法
/*
#include<stdio.h>
void double_sort(int arr[],int sz)
{
    //确定冒泡排序的趟数
    int i = 0;
    for(i=0;i<sz-1;i++)
    {
        int flag = 1;//假设这一趟要排序的数据已经有序
        //每一趟冒泡排序
        int j = 0;
        for(j=0;j<sz-1-i;j++)
        {
            if(arr[j]>arr[j+1])
            {
                int tem = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = tem;
                flag = 0;//本趟排序的数据其实不完全有序
            }
        }
        if(flag == 1)
        {
            break;
        }
    }
}
int main()
{
    int arr[] = {9,8,7,6,5,4,3,2,1,0};
    int sz = sizeof(arr)/sizeof(arr[0]);
    double_sort(arr, sz);
    int i = 0;
    for(i=0;i<sz;i++)
    {
        printf("%d ",arr[i]);
    }
    return 0;
}
*/

//数组名就是首元素地址
//例外：sizeof（数组名），计算整个数组的大小，sizeof内部单独放一个数组名，数组名表示整个数组。
//2.&数组名，取出的是数组的地址，&数组名，数组名表示整个数组.
/*
#include<stdio.h>
int main()
{
    int arr[] = {1,2,3,4,5};
    printf("%p\n",arr);
    printf("%p\n",&arr[0]);
    printf("%d\n",*arr);
    return 0;
}
*/

#include<stdio.h>
#include<string.h>
//数组名是首元素的地址,除了以下两种情况；
//1.sizeof（数组名）-数组名表示整个数组；
//2.&数组名-数组名表示整个数组
//
//int main()
//{
//	int a[] = { 1,2,3,4 };
//	printf("%d", sizeof(a + 0));//4/8 - 数组名表示首元素地址，加0还是首元素地址；
//	printf("%d", sizeof(*a));//4-数组名表示首元素地址，解引用找到的是首元素；
//	printf("%d", sizeof(&a + 1));//4/8 - &a是数组的地址，&a+1虽然跳过整个数组，但还是地址.
//
//	const char* p = "abcdef";//p存的是常量字符串首元素a的地址.
//	char arr[] = "abcdef";
//	printf("%d\n", strlen(arr));//6 - strlen只能计算字符长度，接收的是地址，从给的地址开始向后找“\0".
//	//printf("%d\n", strlen(*arr));//err,传的是首字母a的ascll值，会出现访问冲突；
//
//	return 0;
//}
//

//练习题
//int main()
//{
//	int a[5] = { 1,2,3,4,5 };
//	int* ptr = (int*)(&a + 1);
//	printf("%d,%d\n", *(a + 1), *(ptr - 1));//2,5
//	return 0;
//}//

//struct test
//{
//	int num;
//	char* pcname;
//	short sdate;
//	char cha[2];
//	short sba[4];
//}*p;

//假设p的值为0x100000;
//已知，结构体test类型的变量大小是20个字节

//int main()
//{
//	p = (struct test*)0x100000;
//	printf("%p\n", p + 0x1);//0x100014
//	printf("%p\n", (unsigned long)p + 0x1);//0x100001
//	printf("%p\n", (unsigned int*)p + 0x1);//0x100004
//	return 0;
//}

//int main()
//{
//	int a[4] = { 1,2,3,4 };
//	int* ptr1 = (int*)(&a + 1);
//	int* ptr2 = (int*)((int)a + 1);
//	printf("%x,%x", ptr1[-1], *ptr2);//4,2000000
//}

//#include<stdio.h>
//int main()
//{
//	int a[3][2] = { (0,1),(2,3),(4,5) };//逗号表达式，实际放的是{1,3,5,0,0,0}；
//	int* p;
//	p = a[0];//则a[0]实际放的是{1,3}
//	printf("%d", p[0]);//结果为1
//	return 0;
//}

//int main()
//{
//	char a[5][5];
//	int(*p)[4];
//	///*p = a;*/
//	//printf("%p,%d\n", &p[4][2] - &a[4][2], &p[4][2] - &a[4][2]);
//	printf("%p ", &a[3][3]);
//	printf("%p ", &a[4][2]);
//	printf("%p %d", &a[3][3] - &a[4][2], &a[3][3] - &a[4][2]);//得到的是中间的元素个数.（指针-指针得到的是中间的元素个数）
//	return 0;
//}


//int main()
//{
//	const char* a[] = { "work","at","alibaba" };
//	char** pa = a;
//	pa++;
//	printf("%s\n", *pa);//at
//	return 0;
//}


//画出内存布局图比较好做
//int main()
//{
//	const char* c[] = { "enter","new","point","first" };
//	const char** cp[] = { c + 3,c + 2,c + 1,c };
//	const char*** cpp = cp;
//
//	printf("%s\n",**++cpp );//point
//	printf("%s\n", *-- * ++cpp + 3);//er
//	printf("%s\n", *cpp[-2] + 3);//st
//	printf("%s\n", cpp[-1][-1] + 1);//ew
//	return 0;
//}


//int main()
//{
//	int a = 0;
//	int n = 0;
//	int i = 0;
//	int sum = 0;
//	int ret = 0;
//	scanf("%d%d",&a,&n);
//	for (i = 0; i < n; i++)
//	{
//		ret = ret * 10 + a;
//		sum = sum + ret;
//	}
//	printf("%d", sum);
//	return 0;
//}


//#include<math.h>
//int main()
//{
//	int i = 0;
//	for (i = 0; i <= 100000; i++)
//	{
//		int ret = 0;
//		int sum = 0;
//		int j = 1;
//		int tem = i;
//		//while (tem % 10)//不严谨，如果数中包含0则退出了循环。如370,8208等符合条件的数没有被打印。
//		while (tem / 10)
//		{
//			j++;
//			tem = tem / 10;
//		}
//		tem = i;
//		while(tem)
//		{
//			ret = pow(tem % 10, j);
//			sum = sum + ret;
//			tem = tem / 10;
//		}
//		if (i == sum)
//		{
//			printf("%d ", i);
//		}
//	}
//	return 0;
// }



//喝汽水，一瓶汽水1元，2个空瓶可以换一瓶汽水，可以换多少瓶汽水。
//int main()
//{
//	int money = 0;
//	printf("你有多少钱：");
//	scanf("%d", &money);
//	//计算可以换多少瓶汽水；
//	int num = money / 1;
//	int tem = num;
//	//int i = 0;
//	//num = num + num / 2;
//	while (tem/2)//10 5 2 1
//	{
//		//计算剩余的瓶子能换多少瓶汽水；// 5 2 1 1 
//		num = num + tem / 2;
//		tem = tem / 2 + tem % 2;//计算的是剩余的瓶子；//10 5 3 2
//		//i = tem / 2;
//		//num = num + i;
//	}
//	printf("%d", num);//20+10+5+2+1+1=39
//	return 0;
//}

//输入一个数组，使数组中奇数在前，偶数在后。
void move(int* arr, int sz)
{
	int left = 0;
	int right = sz-1;
	while (left < right)
	{
		while (arr[left] % 2 != 0 && left < right)
		{
			left++;
		}
		while (arr[right] % 2 == 0 && left < right)
		{
			right--;
		}
		if (left < right)
		{
			int tem = arr[left];
			arr[left] = arr[right];
			arr[right] = tem;
		}
	}
}

void print(int* arr, int sz)
{
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d", arr[i]);
	}
}

int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	move(arr, sz);
	print(arr, sz);
	return 0;
}

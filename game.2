game.cpp

#include "game.h"
void initboard(char board[ROWS][COLS], int rows, int cols, char set)
{
    int i = 0;
    int j = 0;
    for(i=0;i<rows;i++)
    {
        for(j=0;j<cols;j++)
        {
            board[i][j] = set;
        }
    }
}

void displayboard(char board[ROWS][COLS],int row,int col)
{
    int i = 0;
    int j = 0;
    //打印列号
    for (i=0;i<=col;i++)
    {
        printf("%d ",i);
    }
    printf("\n");
    for(i=1;i<=row;i++)
    {
        printf("%d ",i);
        for(j=1;j<=col;j++)
        {
            printf("%c ",board[i][j]);
        }
        printf("\n");
    }
}

void SetMine(char board[ROWS][COLS],int row,int col)
{
    int count = easy_count;
    while(count)
    {
        int x = rand()%row + 1;//1-9
        int y = rand()%col + 1;//1-9
        if(board[x][y] == '0')
        {
            board[x][y] = '1';
            count--;
        }
    }
}

int get_mine_count(char mine[ROWS][COLS],int x,int y)
{
    return mine[x-1][y]+mine[x-1][y-1]+mine[x][y-1]+mine[x+1][y-1]+
           mine[x+1][y]+mine[x+1][y+1]+mine[x][y+1]+mine[x-1][y+1]-8*'0';
}


void findmine(char mine[ROWS][COLS],char show[ROWS][COLS],int row,int col)
{
    int x = 0;
    int y = 0;
    int win = 0;
    while(win<row*col-easy_count)
    {
        printf("请输入排查雷的坐标：");
        scanf("%d%d",&x,&y);
        if(x>=1 && x<=row && y>=1 && y<=col)
        {
            if(mine[x][y] == '1')
            {
                printf("很遗憾，你被炸死了\n");
                displayboard(mine,row,col);
                break;
            }
            else//不是雷
            {
               int count = get_mine_count(mine,x,y);//计算xy坐标周围有几个雷
               show[x][y] = count + '0';
               displayboard(show,row,col);
               win++;
            }
        }
        else
        {
            printf("输入坐标非法，请重新输入！\n");
        }
    }
    if(win == row*col - easy_count)
    {
        printf("恭喜你，排雷成功\n");
        displayboard(mine,row,col);
    }
}

test.cpp

#include<stdio.h>
#include"game.h"
void menu()
{
  printf("***********扫雷**********\n");
  printf("********1:开始游戏********\n");
  printf("********0:退出游戏********\n");
  printf("*************************\n");
}
void game()
{
    //雷的信息存储
    //1.布置好的雷的信息
    char mine[ROWS][COLS] = { 0 };// 11*11
    //2.排查出的雷的信息
    char show[ROWS][COLS] = { 0 };
    //初始化
    initboard(mine,ROWS,COLS,'0');
    initboard(show,ROWS,COLS,'*');
    //打印棋盘
    displayboard(show,ROW,COL);
    //布置雷
    SetMine(mine,ROW,COL);
    //扫雷
    findmine(mine,show,ROW,COL);
}
void test()
{
    int a = 0;
    srand((unsigned int)time(NULL));
    do
    {
        menu();
        printf("请选择：\n");
        scanf("%d",&a);
        switch(a)
        {
        case 1:
            printf("游戏开始\n");
            game();
            break;
        case 0:
            printf("退出游戏\n");
            break;
        default:
            printf("输入错误，请重新输入\n");
        }
    }
    while(a);
}
int main()
{
    test();
    return 0;
}

game.h

#define ROW 9
#define COL 9
#define ROWS ROW+2
#define COLS COL+2

#define easy_count 80

#include<stdio.h>
#include<stdlib.h>
#include<time.h>


void initboard(char board[ROWS][COLS],int rows, int cols,char set);
void displayboard(char board[ROWS][COLS],int row,int col);
void SetMine(char board[ROWS][COLS],int row,int col);
void findmine(char mine[ROWS][COLS],char show[ROWS][COLS],int row,int col);
